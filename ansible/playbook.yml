- name: Deploy Chatbox Docker Containers to OCI
  hosts: oci
  become: true  # Run as root

  tasks:
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    
    - name: Stop and remove mysql container if running
      docker_container:
        name: mysql
        state: absent

    - name: Stop and remove frontend container if running
      docker_container:
        name: frontend
        state: absent

    - name: Stop and remove backend container if running
      docker_container:
        name: backend
        state: absent

    - name: Ensure Docker is installed
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure target directory exists
      file:
        path: /opt/chatbox
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy .env file to target machine
      copy:
        src: .env
        dest: /opt/chatbox/.env
        owner: ubuntu
        group: ubuntu
        mode: "0644"

    - name: Ensure Docker network exists
      docker_network:
        name: my_network
        state: present

    - name: Ensure Docker volume exists
      docker_volume:
        name: db_data
        state: present

    - name: "Launch MySQL container"
      docker_container:
        name: mysql
        image: mysql:8
        restart_policy: always
        env:
          MYSQL_ROOT_PASSWORD: "sysadmsysadm"
          MYSQL_DATABASE: "chatbox_db"
          MYSQL_USER: "user"
          MYSQL_PASSWORD: "sysadm"
        volumes:
          - db_data:/var/lib/mysql:rw
        networks:
          - name: my_network
        memory: "512m"
        cpus: "0.5"

    - name: "Launch Backend container with latest image"
      docker_container:
        name: backend
        image: jeanmichelbb/oci-backend:latest
        pull: always
        restart_policy: always
        env_file: /opt/chatbox/.env
        ports:
          - "8000:8000"
        networks:
          - name: my_network
        memory: "256m"
        cpus: "0.3"

    - name: "Launch Frontend container with latest image"
      docker_container:
        name: frontend
        image: jeanmichelbb/oci-frontend:latest
        pull: always
        restart_policy: always
        ports:
          - "80:80"
        networks:
          - name: my_network
        memory: "128m"
        cpus: "0.2"

    - name: create service docker-update.service
      template:
        src: templates/docker-update.service.j2
        dest: /etc/systemd/system/docker-update.service
        owner: root
        group: root
        mode: '0644'

    - name: reload systemd to recognize the new service
      systemd:
        daemon_reload: yes

    - name: start docker-update service
      systemd:
        name: docker-update.service
        state: started
        enabled: yes