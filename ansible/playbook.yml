- name: Deploy Docker Containers to OCI
  hosts: oci
  become: true

  tasks:
    - name: Ensure required packages are installed
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create Docker network
      command: docker network create my_network
      ignore_errors: true  # Ignore if the network already exists

    - name: Remove old MySQL container (if exists)
      command: docker rm -f mysql
      ignore_errors: true

    - name: Run MySQL container
      command: >
        docker run -d --name mysql
        --network my_network
        -e MYSQL_ROOT_PASSWORD=sysadmsysadm
        -e MYSQL_DATABASE=chatbox_db
        -e MYSQL_USER=user
        -e MYSQL_PASSWORD=sysadm
        -v db_data:/var/lib/mysql
        mysql:8

    - name: Create systemd service for Backend and Frontend
      copy:
        dest: /etc/systemd/system/chatbox.service
        content: |
          [Unit]
          Description=Chatbox Backend & Frontend Service
          After=network.target mysql.service
          Requires=mysql.service

          [Service]
          Type=oneshot
          RemainAfterExit=yes
          ExecStartPre=/usr/bin/docker pull jeanmichelbb/oci-backend:latest
          ExecStartPre=/usr/bin/docker pull jeanmichelbb/oci-frontend:latest
          ExecStart=/bin/bash -c "
            docker rm -f backend frontend || true &&
            docker run -d --name backend --network my_network -p 8000:8000 jeanmichelbb/oci-backend:latest &&
            docker run -d --name frontend --network my_network -p 80:80 jeanmichelbb/oci-frontend:latest
          "
          ExecStop=/bin/bash -c "
            docker stop frontend backend
          "
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Enable and start MySQL service
      systemd:
        name: mysql
        enabled: yes
        state: started

    - name: Enable and start Chatbox service
      systemd:
        name: chatbox
        enabled: yes
        state: started